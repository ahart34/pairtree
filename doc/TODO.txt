Think about "hard zeroes" in the method
  E.g., if we have the A -> B edge, we treat this case:
    A = 0.02 and B = 0.05, we trea
  the same as this case:
    A = 0 and B = 0.03
  If something has zero reads, we should treat that differently

Cleanup:
  Remove "dummy prob"

  Remove ability for phi fitter, tree samples, etc. to take clusters of variants -- they should just take single supervariant
  Remove .phi.json files, make JS extract freqs from tree summary
  Rejig the left/right node colouring in tree plotter -- make left/right samples user-configurable when plotting

Steph:
  19 datasets
  14 patients
    +1 extra for SJBALL022610
    +4 extra for SJETV010
  PASTRI + SciClone:
    SciClone failed on four datasets
    Dropped variable numbers of variants on others
      cd ~/work/pairtree/scratch/results/steph.xeno.sciclone && for foo in *stdout; do echo $(echo $foo | cut -d. -f1) $(cat $foo | grep "of inadequate depth" | awk '{print $1/$4}'); done | sort -nk2
      | column -t
      Median: 17.4% of variants dropped

Occasionally init with fully branched tree
Do hyperparam search
Make Pairtree function offline by including copies of D3 and jQuery
Put Jose's code in submodule
  Set default path to that submodule so you don't need to set LD_LIBRARY_PATH
Make possible installation via Conda

Make exceptions when running in multichain produce a sensible exception
I don't seem to handle garbage variants in mutphi eval -- bah
